#!/bin/bash

if [ -z $1 ] ; then
	echo "No spot fleet request given" >&2
	exit 1
fi
fleet_request_id=$1

# Not using aws ec2 wait spot-instance-request-fulfilled because:
#  1) It does not work with fleet request (it's impossible to get instance-request from fleet-request)
#  2) It polls only every 15 seconds
echo "Waiting for Spot request to be accepted..."
check_instance="aws ec2 describe-spot-fleet-instances --spot-fleet-request-id $fleet_request_id"
n_instance_ready=$($check_instance | jq '.ActiveInstances | length')
while [ "$n_instance_ready" -eq "0" ] ; do
	sleep 3
	n_instance_ready=$($check_instance | jq '.ActiveInstances | length')
done

get_instance_id="aws ec2 describe-spot-fleet-instances --spot-fleet-request-id $fleet_request_id --query ActiveInstances[0].InstanceId"
instance_id=$($get_instance_id | sed -e 's/^"//' -e 's/"$//')
echo "Instance ID: $instance_id"

get_ip_address="aws ec2 describe-instances --instance-ids $instance_id --query Reservations[0].Instances[0].PublicIpAddress"
ip_address=$($get_ip_address | sed -e 's/^"//' -e 's/"$//')
echo "IP Address: $ip_address"

echo "Waiting for instance to start..."
check_instance_running="aws ec2 describe-instances --instance-ids $instance_id --query Reservations[0].Instances[0].State.Name"
instance_state=$($check_instance_running | sed -e 's/^"//' -e 's/"$//')
while [ "$instance_state" != "running" ] ; do
	sleep 5
	instance_state=$($check_instance_running | sed -e 's/^"//' -e 's/"$//')
done

sleep 10

# Adding SSH host key in SSH known hosts file
echo "Waiting to obtain SSH host key..."
get_ssh_host_key_cmd="ssh-keyscan -t ecdsa -H $ip_address"
while [ -z "$found_host_key" ] ; do
	found_host_key_entry=$($get_ssh_host_key_cmd 2> /dev/null)
	found_host_key=$(echo $found_host_key_entry | cut -d "|" -f 4 | cut -d " " -f 2-)
	sleep 3
done

echo "waiting to check SSH host key..."
n_attempts=0
check_ssh_host_key_cmd="aws ec2 get-console-output --instance-id $instance_id --output text | grep ecdsa"
while [ -z "$correct_host_key" ] ; do
	((n_attempts++))
	correct_host_key=$(sh -c "$check_ssh_host_key_cmd" | head -c -3)
	sleep 2
	if [ $n_attempts -eq 3 ] ; then
		echo "Keep waiting for validation of SSH host_key?"
		read -t 5 rep
		if [ "$?" -eq "142" ] ; then # If read timed out
			echo "Skipping SSH host_key validation"
			rep="n"
		fi
		if [ "$rep" = "n" ] || [ "$rep" = "no" ] ; then
			skipcheck="true"
			break
		fi
	fi
done
if [ "$correct_host_key" != "$found_host_key" ] && [ "$skipcheck" != "true" ] ; then
	echo "SSH host key does not match"
	exit
else
	echo $found_host_key_entry >> ~/.ssh/known_hosts
fi
echo "Connecting..."
aws-ssh $ip_address
